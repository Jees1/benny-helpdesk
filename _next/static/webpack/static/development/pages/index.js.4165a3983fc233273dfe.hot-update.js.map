{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.4165a3983fc233273dfe.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import CategoryList from '../components/_CategoryList'\r\nimport Head from 'next/head'\r\nimport { Link, Element } from 'react-scroll'\r\nimport Button from '../components/Button'\r\nimport styles from '../styles.module.css'\r\n\r\nexport default function ({ props, categories }) {\r\n    const additions = {\r\n        gettingstarted: [\r\n\t\t\t{\r\n\t\t\t\tname: \"Support Server\",\r\n\t\t\t\tcolor: \"brand\",\r\n\t\t\t\tlink: \"https://discord.gg/RDeNrrY\"\r\n\t\t\t}\r\n        ],\r\n        notfound: [\r\n            {\r\n                name: \"Support Server\",\r\n                color: \"brand\",\r\n                link: \"https://discord.gg/RDeNrrY\"\r\n            }\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\", padding: \"4%\" }} >\r\n            <Head>\r\n                <title>Benny Help</title>\r\n            </Head>\r\n\r\n            <div className={styles[\"hero-box\"]}>\r\n                <h1 style={{ fontSize: 42 }}>\r\n                    Benny <span style={{ fontWeight: 400 }}>Help</span>\r\n                </h1>\r\n                <p>\r\n                    Your top-level special function and utility bot. <br />\r\n                    Find all the information you need to use Benny.\r\n                </p>\r\n                <div>\r\n                    <Link to=\"categories\" smooth\r\n                        offset={50}\r\n                        duration={500}\r\n                        className=\"prevDefault\"\r\n                    >\r\n                        <Button color=\"secondary\">\r\n                            Help Categories\r\n                        </Button>\r\n                    </Link>\r\n                    <Button color=\"light\" onClick={() => window.location.href = 'https://bennybot.dev/dashboard'}>\r\n                        Dashboard\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            {additions.gettingstarted.length != 0 &&\r\n                <CategoryList items={additions.gettingstarted} />\r\n            }\r\n\r\n            <Element name=\"categories\">\r\n                <h2>\r\n                    All Categories\r\n                </h2>\r\n            </Element>\r\n\r\n            <CategoryList items={categories} />\r\n\r\n            <h2>\r\n                Can't find what you're looking for?\r\n            </h2>\r\n\r\n            <div>\r\n                {additions.notfound.map((c, i) => (\r\n                    <Button disabled={c.disabled === true} onClick={() => window.location.href = c.link} color={c.color} key={i}>\r\n                        {c.name}\r\n                    </Button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport async function getStaticProps() {\r\n    let returned = []\r\n\r\n    const fs = require('fs')\r\n    const path = require('path')\r\n    const postsDirectory = path.join(process.cwd(), 'pages', 'docs')\r\n    const filenames = fs.readdirSync(postsDirectory, { withFileTypes: true })\r\n        .filter(d => d.isDirectory())\r\n\r\n\r\n\r\n    await (async function () {\r\n        for (let i = 0; i < filenames.length; i++) {\r\n            let ux = filenames[i]\r\n\r\n            import(`./docs/${ux.name}/index.js`)\r\n                .then(x => {\r\n                    returned.push({\r\n                        fname: ux.name,\r\n                        name: x.info.name,\r\n                        description: x.info.description\r\n                    })\r\n                })\r\n        }\r\n    })()\r\n\r\n    return {\r\n        props: {\r\n            categories: returned\r\n        }\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AAEA;AACA;AACA;AAHA;AATA;AAiBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAQA;;;;A","sourceRoot":""}